<?xml version="1.0" encoding="utf-8"?>

<feed xmlns="http://www.w3.org/2005/Atom" >
  <generator uri="https://jekyllrb.com/" version="3.9.0">Jekyll</generator>
  <link href="https://kkowndoyoung.github.io/tag/lecture/feed.xml" rel="self" type="application/atom+xml" />
  <link href="https://kkowndoyoung.github.io/" rel="alternate" type="text/html" />
  <updated>2023-06-02T22:48:29+09:00</updated>
  <id>https://kkowndoyoung.github.io/tag/lecture/feed.xml</id>

  
  
  

  
    <title type="html">What was doing? | </title>
  

  
    <subtitle>권도영의 깃허브 블로그</subtitle>
  

  

  
    
      
    
  

  
  

  
    <entry>
      <title type="html">IoT 시스템을 활용한 센싱 데이터 수집과 시각화 - (1) 아두이노 데이터 모집</title>
      <link href="https://kkowndoyoung.github.io/lecture-iotdata1" rel="alternate" type="text/html" title="IoT 시스템을 활용한 센싱 데이터 수집과 시각화 - (1) 아두이노 데이터 모집" />
      <published>2023-05-28T08:57:21+09:00</published>
      <updated>2023-05-28T08:57:21+09:00</updated>
      <id>https://kkowndoyoung.github.io/lecture-iotdata1</id>
      <content type="html" xml:base="https://kkowndoyoung.github.io/lecture-iotdata1">{% include lecture-table-of-contents.html %}

![IoT](/assets/built/images/LECTURE/IOT_1.jpg){: width=&quot;900px&quot; }

sw특강 IoT 시스템을 활용한 센싱 데이터 수집과 시각화를 들으러 왔다 

![IoT](/assets/built/images/LECTURE/IOT_2.jpg){: width=&quot;700px&quot; }

테스트하라고 주신 키트

![IoT](/assets/built/images/LECTURE/IOT_3.jpg){: width=&quot;700px&quot; }

조립 완료

새로로 꽂혀있는 하늘색이 온도와 습도를 측정하는 곳이다

![IoT](/assets/built/images/LECTURE/IOT_4.PNG)

사용할 플랫폼들

![IoT](/assets/built/images/LECTURE/IOT_6.PNG)

코드 작성

2초마다 온도, 습도를 받았다

![IoT](/assets/built/images/LECTURE/IOT_8.png)
![IoT](/assets/built/images/LECTURE/IOT_9.png)

코드가 정상적으로 작동해서 2초마다 

![IoT](/assets/built/images/LECTURE/IOT_7.png)

사용할 포트번호 확인

시각화가 목적인데 온도는 큰 변화를 줄 수 없어 습도만 값을 받게 함
~~~arduino
#include &quot;DHT.h&quot;

// DHT 11
#define DHTPIN 2
#define DHTTYPE DHT11

DHT dht(DHTPIN, DHTTYPE);

void setup() {
    Serial.begin(9600);
    Serial.println(F(&quot;Humidity data start!&quot;));
    dht.begin();
}

void loop() {
    // 1/1000sec이니 2000이면 2초
    delay(2000);
    float h = dht.readHumidity();

    // check 습도가 제대로 들어왔는지
    if (isnan(h)) {
        Serial.println(F(&quot;Failed to read from DHT sensor!&quot;));
        return;
    }


    Serial.print(F(&quot;Humidity : &quot;));
    Serial.print(h);
    Serial.println(&quot;%&quot;);
}

~~~

![IoT](/assets/built/images/LECTURE/IOT_10.png)

완성된 코드와 결과


이제 Python으로 값을 받아보자


![IoT](/assets/built/images/LECTURE/IOT_11.png)

파이썬 코드
~~~Python
import serial
import time
import csv

port = 'COM3'
baud_rate = 9600

# Open the serial port
ser = serial.Serial(port, baud_rate)

# Read serial data in a loop
dataes = []
tempList = []

while True:
    try:
        time.sleep(1)

        if ser.readable():
            # Read a line of serial data
            line = ser.readline()

            # Decode the line assuming it's UTF-8 encoded
            line = line.decode('utf-8').strip()
            ##print(line)

            data = line.split(' ')
            if data[0] == 'Humidity':
                print(time.time())
                # Print the received data
                print(data[1])
                print(data[2])
                tempList.append(int(time.time()))
                tempList.append(data[2].strip('%'))
                dataes.append(tempList)
                tempList = []

                if len(dataes) &gt; 10:
                    with open(&quot;data.csv&quot;, &quot;w&quot;, newline='') as csvFile:
                        writer = csv.writer(csvFile)
                        writer.writerows(dataes)

                    print(&quot;CSV file saved successfully&quot;)
                    ser.close()
                    break

    except KeyboardInterrupt:
        # Close the serial port on Ctrl+C
        ser.close()
        break
~~~

![IoT](/assets/built/images/LECTURE/IOT_12.png)

결과확인

나머지는 다음 장에~</content>

      
      
      
      
      

      <author>
          <name>doyoungKwon</name>
        
        
      </author>

      

      
        <category term="lecture" />
      

      
        <summary type="html">특강은 여러 절로 구성되어 있습니다. IoT 시스템을 활용한 센싱 데이터 수집과 시각화 - (1) IoT 시스템을 활용한 센싱 데이터 수집과 시각화 - (2)</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">IoT 시스템을 활용한 센싱 데이터 수집과 시각화 - (2) 시각화</title>
      <link href="https://kkowndoyoung.github.io/lecture-iotdata2" rel="alternate" type="text/html" title="IoT 시스템을 활용한 센싱 데이터 수집과 시각화 - (2) 시각화" />
      <published>2023-05-28T08:57:21+09:00</published>
      <updated>2023-05-28T08:57:21+09:00</updated>
      <id>https://kkowndoyoung.github.io/lecture-iotdata2</id>
      <content type="html" xml:base="https://kkowndoyoung.github.io/lecture-iotdata2">{% include lecture-table-of-contents.html %}

csv파일로 저장해보자

![IoT](/assets/built/images/LECTURE/IOT_14.png)
잘 저장 된 모습

가공해서 데이터를 500개 모아봤다
![IoT](/assets/built/images/LECTURE/IOT_13.png)

코드
~~~Python
import serial
import time 
import csv

port = 'COM3'
baud_rate = 9600

# Open the serial port
ser = serial.Serial(port, baud_rate)

# Read serial data in a loop
dataes = []
tempList = []

# time ez
start_time = int(time.time())

while True:
    try:
        time.sleep(1)

        if ser.readable():
            # Read a line of serial data
            line = ser.readline()

            # Decode the line assuming it's UTF-8 encoded
            line = line.decode('utf-8').strip()
            ##print(line)

            data = line.split(' ')
            if data[0] == 'Humidity':
                
                print(int(time.time()-start_time)-2)
                # Print the received data
                print(data[1])
                print(data[2])
                tempList.append(int(time.time())-start_time-2)
                tempList.append(data[2].strip('%'))
                dataes.append(tempList)
                tempList = []

                if len(dataes) &gt; 500:
                    with open(&quot;Humidity_data.csv&quot;, &quot;w&quot;, newline='') as csvFile:
                        writer = csv.writer(csvFile)
                        writer.writerows(dataes)

                    print(&quot;CSV file saved successfully&quot;)
                    ser.close()
                    break

    except KeyboardInterrupt:
        # Close the serial port on Ctrl+C
        ser.close()
        break
~~~

데이터를 시각화 해봄
![IoT](/assets/built/images/LECTURE/IOT_15.png)

여러가지 시각화도 연습해봤다
![IoT](/assets/built/images/LECTURE/IOT_16.png)
![IoT](/assets/built/images/LECTURE/IOT_17.png)

시각화를 애니메이션으로도 만들어 봤는데 신기해서 올린다
~~~python
mport matplotlib.pyplot as plt
import csv
import numpy as np
from matplotlib.animation import FuncAnimation

fig, ax = plt.subplots()
ax.set_xlim(0,1010)
ax.set_ylim(0,100)
plt.xlabel(&quot;Time(s)&quot;)
plt.ylabel(&quot;Humidity(%)&quot;)


x,y = [],[]
line, = plt.plot([],[],'bo-')

def update(frame):
    x=X[:frame]
    y=Y1[:frame]
    line.set_data(x,y)
    return line,

X = []
Y1 = []

with open('Humidity_data.csv', 'r', encoding='utf-8') as f:
    rdr = csv.reader(f)
    next(rdr, None)  # Skip the header row
    for row in rdr:
        X.append(int(row[0]))
        Y1.append(float(row[1]))

ani = FuncAnimation(fig,update, frames=len(X),interval=10)

plt.show()
~~~

결과물은 gif파일이라 pass


데이터를 어떻게 수집하는지 궁금했는데 직접 해보아서 좋았다</content>

      
      
      
      
      

      <author>
          <name>doyoungKwon</name>
        
        
      </author>

      

      
        <category term="lecture" />
      

      
        <summary type="html">특강은 여러 절로 구성되어 있습니다. IoT 시스템을 활용한 센싱 데이터 수집과 시각화 - (1) IoT 시스템을 활용한 센싱 데이터 수집과 시각화 - (2)</summary>
      

      
      
    </entry>
  
</feed>
